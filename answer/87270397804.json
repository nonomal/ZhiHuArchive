{
  "answer_type": "normal",
  "author": {
    "avatar_url": "https://picx.zhimg.com/v2-b10214702e40f6088c1f71cc1c60ca83_l.jpg?source=2c26e567",
    "avatar_url_template": "https://picx.zhimg.com/v2-b10214702e40f6088c1f71cc1c60ca83.jpg?source=2c26e567",
    "badge": [
      {
        "description": "信息技术行业 算法工程师",
        "topics": [],
        "type": "identity"
      }
    ],
    "badge_v2": {
      "detail_badges": [
        {
          "badge_status": "passed",
          "description": "知势榜教育校园领域影响力榜答主",
          "detail_type": "super_activity",
          "icon": "https://pica.zhimg.com/v2-4a07bc69c4bb04444721f35b32125c75_l.png?source=32738c0c",
          "night_icon": "https://picx.zhimg.com/v2-4a07bc69c4bb04444721f35b32125c75_l.png?source=32738c0c",
          "sources": [
            {
              "avatar_path": "",
              "avatar_url": "",
              "description": "",
              "id": "27",
              "name": "知势榜8月",
              "priority": 27,
              "token": "",
              "type": "content_potential_category",
              "url": ""
            }
          ],
          "title": "社区成就",
          "type": "reward",
          "url": ""
        },
        {
          "badge_status": "passed",
          "description": "信息技术行业 算法工程师",
          "detail_type": "identity_people",
          "icon": "https://picx.zhimg.com/v2-2ddc5cc683982648f6f123616fb4ec09_l.png?source=32738c0c",
          "night_icon": "https://pic1.zhimg.com/v2-2ddc5cc683982648f6f123616fb4ec09_l.png?source=32738c0c",
          "sources": [],
          "title": "已认证的个人",
          "type": "identity",
          "url": "https://zhuanlan.zhihu.com/p/96956163"
        }
      ],
      "icon": "https://picx.zhimg.com/v2-27bfcba90e66db79ce8768ab807e017e_l.png?source=32738c0c",
      "merged_badges": [
        {
          "badge_status": "passed",
          "description": "知势榜教育校园领域影响力榜答主",
          "detail_type": "best",
          "icon": "",
          "night_icon": "",
          "sources": [],
          "title": "社区成就",
          "type": "best",
          "url": ""
        },
        {
          "badge_status": "passed",
          "description": "信息技术行业 算法工程师",
          "detail_type": "identity_people",
          "icon": "",
          "night_icon": "",
          "sources": [],
          "title": "认证",
          "type": "identity",
          "url": "https://zhuanlan.zhihu.com/p/96956163"
        }
      ],
      "night_icon": "https://pic1.zhimg.com/v2-27bfcba90e66db79ce8768ab807e017e_l.png?source=32738c0c",
      "title": "知势榜教育校园领域影响力榜答主"
    },
    "gender": -1,
    "headline": "学校≠教育≠技能；文凭溢价=80%信号传递+20%人力资本",
    "id": "4c592f496dc33822b560b382907ff1d0",
    "is_advertiser": false,
    "is_org": false,
    "is_privacy": false,
    "name": "Thoughts Memo",
    "type": "people",
    "url": "https://api.zhihu.com/people/4c592f496dc33822b560b382907ff1d0",
    "url_token": "L.M.Sherlock",
    "user_type": "people"
  },
  "biz_ext": {
    "share_guide": {
      "has_positive_bubble": false,
      "has_time_bubble": false,
      "hit_share_guide_cluster": false
    }
  },
  "comment_count": 72,
  "content": "<p data-pid=\"UB24Njbr\">找到一个能够迷惑 DeepSeek-R1 的问题：</p><div class=\"highlight\"><pre><code class=\"language-text\">你听说过著名的双胞胎诚实守门人问题吗？\n你进入一个有两扇门的房间（左边和右边）。一扇门通向自由，另一扇门通向死亡。有两个守门人：一个总是说实话，另一个从不说谎。\n挑战在于弄清楚哪扇门通向自由，但你只能问一个问题，这个问题会被两个守门人回答。\n你将如何解决这个问题？</code></pre></div><p data-pid=\"0JBBC-t6\">这道题非常简单，因为两个守门人都会诚实回答问题，而且会同时回答你。但是 DeepSeek-R1 会自作聪明地把题目给改掉，然后给出非常复杂的分析。</p><p data-pid=\"df6ne5Ly\">DeepSeek-R1 的回复：</p><p data-pid=\"fRvQ36iD\">嗯，这个问题好像是一个经典的逻辑谜题，我应该怎么解决呢？让我仔细想想。首先，问题是这样的：有两个门，左边和右边，分别通向自由和死亡。有两个守门人，一个是永远说真话的，另一个是永远说谎的。但我只能问一个问题，而且这个问题会被两个守门人都回答，也就是说我要设计一个问题，让无论是诚实的还是说谎的守门人的回答都能帮助我找到正确的门。那应该怎么问呢？<br/><br/>首先，我需要回忆一下类似的问题。比如，有一个门的问题，通常的解决方法是向其中一个守卫问另一个守卫会怎么说，从而得到相反的答案。但这里的情况可能不同，因为我是同时问两个守卫同一个问题，而他们都会回答。或者可能，我需要构造一个问题，使得不管是谁回答，他们的答案都会指向同一个正确的门。<br/><br/>比如，假设我问：“如果我问另一位守门人哪扇门通向自由，他会怎么回答？”然后，无论是诚实还是说谎的守门人，他们的答案都会指向错误的那扇门。然后我选择相反的。但这样的话，可能需要问两位守门人同一个问题，但这里我只能问一个问题，而两个守门人都会回答。或者，可能我需要把问题设计成他们两人的回答一致？<br/><br/>或者，有没有其他方式的问题，可以让他们的回答虽然不同，但结合起来就能判断正确的门？或者，是否应该问一个涉及他们自身的问题，使得无论是诚实还是说谎的，给出的答案都是同一个方向？<br/><br/>例如，假设我问：“你们会如何回答‘哪扇门是通向自由的’这个问题？”这时候，诚实的守门人会说正确的门，而说谎的守门人会说错误的门。但这样的话，我得到两个答案，一个是正确的一个是错误的，那我怎么判断呢？这时候可能需要找出多数意见，但这里两个答案可能相反，所以无法判断。<br/><br/>哦，不对，因为在这种情况下，两个守门人会给出相反的答案。比如，正确是左门，那么诚实者说左，说谎者说右。这时候，如果我只能问一个问题，而他们都会回答，那么他们的回答就会各执一词。这显然无法解决问题，因为这时得到的答案是一左一右，我无法确定哪边是对的。<br/><br/>所以，这可能需要另一种提问方式，让两人的回答指向同一个门。例如，我需要构造一个问题，使得无论是诚实者还是说谎者，都会指向同一个门。比如，可以问：“如果我问你‘右边的门是否是死亡之门’，你会回答‘是’吗？”这可能比较复杂，但或许能行？<br/><br/>或者，使用这样的问题：“如果我问另一位守门人哪扇门通向自由，他会指向哪边？”这时候，诚实的守门人会如实报告说谎者的错误答案，而说谎的守门人会谎报诚实者的正确答案。例如，假设正确的门是左，那么诚实者知道说谎者会指向右，所以诚实者会回答右。而说谎者会谎报诚实者的正确回答，即诚实者会指向左，所以他会说左是错误的，即他会回答右？这样，无论问哪一个，两人都会指向右，这时候正确的门应该是左？或者这可能需要更仔细的分析。<br/><br/>或者，另一个思路是问其中一个守门人，另一个会如何回答，但现在的问题是同时问两个守门人，所以他们都会回答同一个问题。比如，如果问：“对方会如何回答哪扇门是自由的？”那么无论谁回答，得到的答案都会是错误的，所以可以选相反的门。或者，如果两个守门人同时回答这个问题，那么他们的回答可能都会指向错误的方向，所以应该选择相反的那个？<br/><br/>或者，我需要将问题设计成，无论对方是诚实还是说谎，他们都会指向同一扇门。例如，可以问：“如果我问你‘左边的门是否通向自由’，你会回答‘是’吗？”然后根据他们的回答来判断。<br/><br/>假设正确的门是左边。那么，诚实的守门人对于问题“左边的门是否通向自由”会回答“是”，所以当被问“你会回答‘是’吗”，他当然回答“是”。而说谎的守门人对于问题“左边的门是否通向自由”会回答“否”，所以当被问“你会回答‘是’吗”，他必须撒谎，所以实际他的回答是“是”，因为实际上他会回答“否”，所以撒谎的话，他回答“是”。所以在这种情况下，无论守门人是否诚实，都会回答“是”。所以如果左边的门是正确的，两人都会回答“是”；如果右边的门正确，那么当问题改为“左边的门是否通向自由”，诚实的会说“否”，所以当被问是否会回答“是”，他答“否”，而说谎者会原本应该回答“是”，所以当被问是否会回答“是”，他必须撒谎，所以回答“否”。因此，这样的问题可以让两个守门人给出相同的答案，从而确定正确的门。例如，如果答案是“是”，则左边的门正确；如果答案是“否”，则右边的门正确。<br/><br/>不过，这个问题的关键在于，如何构造一个双重否定的问题，使得无论对方是否诚实，他们的回答都会指向正确的门。或者，可能更简单的方式是问他们一个关于对方会怎么说的问题，从而让两个人都给出相同的错误答案，这样你就可以选择相反的门。<br/><br/>例如，问：“另一位守门人会如何指示自由之门？”假设正确的门是左。诚实者知道说谎者会指向右，所以诚实者回答右。说谎者知道诚实者会指向左，所以他会撒谎，回答右（因为诚实者会正确地说左）。所以两个人都回答右，因此正确的门是左。这样，无论正确的是左还是右，两人都会指向同一扇错误的门，这样我就可以选相反的那个。但这时候的问题在于，如果我的问题是“另一位守门人会说哪扇门通向自由”，那么无论正确门是左还是右，两个守门人都会给出同一个错误的答案，这样我就选另一个门即可。<br/><br/>但这样的话，问题可以被构造为：“如果我问另一个守门人哪扇门通向自由，他会指向哪边？”然后两人都会指向错误的门，所以正确的门是另一边。而这个问题只需要同时问两人，他们的回答会一致吗？<br/><br/>是的。例如，如果正确门是左：<br/><br/>- 诚实者知道另一个守门人（说谎者）会说右，所以他回答右。<br/><br/>- 说谎者知道另一个守门人（诚实者）会说左，所以他会撒谎，说右。<br/><br/>所以两人都回答右，所以正确的门是左。反之，如果正确门是右：<br/><br/>- 诚实者会说，说谎者会回答左。<br/><br/>- 说谎者会撒谎诚实者的正确回答（诚实者会说右），所以他说左。<br/><br/>因此，两人都回答左，正确门是右。因此，无论正确门是哪个，两人都会指向错误的门，所以正确的门就是他们回答的反方向。因此，我只需要问他们：“如果我问另一个守门人哪扇门通向自由，他会指向哪边？”然后选择相反的门即可。<br/><br/>但是，这里的问题是我只能问一个问题，并且这个问题会被两个守门人都回答。所以可能我需要将问题设计成他们两人都会给出同样的答案，不管他们谁是诚实者，谁是撒谎者。例如，问：“如果我问你们中的任何一位‘哪扇门通向自由’，你们会怎么回答？”或者，更具体地说，可以问：“对方会如何回答哪扇门通向自由？”然后两人的答案都会是错误的，这样选择相反的门即可。<br/><br/>或者，另一个思路是，问一个自指的问题，比如：“你们中的一个会肯定回答左边的门通向自由吗？”可能不太行。<br/><br/>回到之前的例子，正确的提问应该是：“如果我问另一个守门人哪扇门通向自由，他会指向哪边？”然后两个守门人都会指向错误的方向，这样正确的门就是另一边。因此，当我同时问两人这个问题时，他们的回答都会是错误的方向，所以正确的门就是他们的回答的反面。这时候，无论他们谁是谁，两人的回答都会相同，所以只要选相反方向即可。<br/><br/>因此，最终的解决方案应该是问他们这样的一个问题，使得两个守门人都指向错误的门，从而选择相反的门。例如，问：“另一个守门人会推荐哪扇门？”或者更明确地：“如果我问另一位守门人哪扇门是通向自由的，他会怎么回答？”然后两人都会给出错误的答案，所以正确的门是相反的那个。<br/><br/>所以，这种情况下，正确的做法是向任何一个守门人询问另一个守门人会如何回答，但在这个问题中，我们被允许同时问两个守门人一个问题，所以他们都会回答。但无论谁回答，他们的回答都会是错误的方向，因此正确的门是他们的回答的反方向。或者，问题可能需要更精确的构造，例如：<br/><br/>问：“如果我问你（指向其中一个守门人）‘哪扇门通向自由’，你会怎么回答？”然后，同样的，两位守门人的回答是否相同？<br/><br/>不过在这种情况下，可能更好的方法是向两位守门人同时问一个问题，例如：“哪扇门会另一位守门人说是通向自由的？”这时候，两位都会给出错误的答案，所以正确的门是他们的答案的反面。<br/><br/>例如，正确的门是左：<br/><br/>- 诚实的守门人知道另一个说谎者会指向右，所以他回答右。<br/><br/>- 说谎的守门人知道诚实者会指向左，所以他撒谎，回答右。<br/><br/>两人都回答右，所以正确的门是左。同样，如果正确的门是右，两人都会回答左，因此正确的门是右的反面，即右的反面是左？这好像矛盾了。哦，不对。假设正确门是右：<br/><br/>- 诚实的守门人会说另一位守门人（说谎者）会指向左，因为说谎者会撒谎正确门的答案，正确门是右，所以他会说左。<br/><br/>- 说谎的守门人，当被问另一位（诚实者）会指向哪，诚实者会指向右，所以他说谎，回答左。<br/><br/>因此，两人都回答左，所以正确的门应该是右。因此，无论正确门是左还是右，两个守门人都会指向错误的门，所以正确的门是他们回答的相反方向。<br/><br/>因此，正确的做法是：问两个守门人，“另一位守门人会指向哪扇门作为通向自由的门？”，然后选择相反的那扇门。因此，无论他们谁是谁，得到的答案都是错误的方向，因此反选即可。<br/><br/>或者，另一个常见的解法是问其中一位守门人：“如果我问另一位守门人哪扇门通向自由，他会怎么说？”然后无论问的是谁，得到的答案都是错误的门。但在这个问题中，允许同时问两个守门人，所以他们的回答都会是错误的方向。因此，正确的门就是他们回答的相反方向。<br/><br/>综上，我应该设计的问题类似于：“如果我问另一位守门人哪扇门通向自由，他会怎么回答？”然后两位都会给出错误的答案，因此正确的门是他们的回答的反面。因此，最终答案是向两位守门人提出这个问题，根据他们的回答（两人会指向同一扇错误之门），然后选择另一扇门。</p><p data-pid=\"SVwmpGix\">要解决这个问题，你可以向两位守门人提出以下问题：<br/><b>“如果我问另一位守门人哪扇门通向自由，他会指向哪边？”</b><br/>无论两位守门人中谁是诚实的、谁是撒谎的，他们的回答都会指向<b>错误</b>的门。原因如下：<br/></p><ol><li data-pid=\"PWjmpo41\"><b>假设左边的门通向自由：</b></li></ol><ul><li data-pid=\"nkgF4ESs\"><b>诚实守门人</b>知道撒谎者会指向右边的门（错误答案），因此他会如实回答“右边”。</li><li data-pid=\"7fuzp2Vz\"><b>撒谎守门人</b>知道诚实者会指向左边的门（正确答案），因此他会撒谎并回答“右边”。</li><li data-pid=\"ohDqwcFb\"><b>假设右边的门通向自由：</b></li><li data-pid=\"QiusjPQZ\"><b>诚实守门人</b>知道撒谎者会指向左边的门（错误答案），因此他会如实回答“左边”。</li><li data-pid=\"xKzGCDla\"><b>撒谎守门人</b>知道诚实者会指向右边的门（正确答案），因此他会撒谎并回答“左边”。</li></ul><p data-pid=\"C4TmI2Nj\">无论哪种情况，两位守门人都会指向同一扇错误的门。因此，你只需选择他们回答的<b>反方向的门</b>即可通向自由。<br/><b>答案：</b><br/>问两位守门人：“如果我问另一位守门人哪扇门通向自由，他会指向哪边？”然后选择他们回答的相反方向的门。</p><figure data-size=\"normal\"><noscript><img src=\"https://picx.zhimg.com/50/v2-af810ffa80cc054f2bbf5bfd99b6154b_720w.jpg?source=2c26e567\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1934\" data-rawheight=\"1732\" data-original-token=\"v2-af810ffa80cc054f2bbf5bfd99b6154b\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-ff64fb3b7bb248723c3f390710514596_720w.jpg?source=2c26e567\" class=\"origin_image zh-lightbox-thumb\" width=\"1934\" data-original=\"https://picx.zhimg.com/v2-af810ffa80cc054f2bbf5bfd99b6154b_r.jpg?source=2c26e567\"/></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1934&#39; height=&#39;1732&#39;&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1934\" data-rawheight=\"1732\" data-original-token=\"v2-af810ffa80cc054f2bbf5bfd99b6154b\" data-default-watermark-src=\"https://picx.zhimg.com/50/v2-ff64fb3b7bb248723c3f390710514596_720w.jpg?source=2c26e567\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1934\" data-original=\"https://picx.zhimg.com/v2-af810ffa80cc054f2bbf5bfd99b6154b_r.jpg?source=2c26e567\" data-actualsrc=\"https://picx.zhimg.com/50/v2-af810ffa80cc054f2bbf5bfd99b6154b_720w.jpg?source=2c26e567\"/></figure><p></p>",
  "content_need_truncated": false,
  "created_time": 1737863809,
  "excerpt": "找到一个能够迷惑 DeepSeek-R1 的问题： 你听说过著名的双胞胎诚实守门人问题吗？ 你进入一个有两扇门的房间（左边和右边）。一扇门通向自由，另一扇门通向死亡。有两个守门人：一个总是说实话，另一个从不说谎。 挑战在于弄清楚哪扇门通向自由，但你只能问一个问题，这个问题会被两个守门人回答。 你将如何解决这个问题？这道题非常简单，因为两个守门人都会诚实回答问题，而且会同时回答你。但是 DeepSeek-R1 会自作聪明地把题…",
  "force_login_when_click_read_more": false,
  "id": "87270397804",
  "is_jump_native": false,
  "question": {
    "created": 1737439725,
    "detail": "",
    "id": "10175007563",
    "question_type": "normal",
    "relationship": {},
    "title": "如何评价deepseek-R1与deepseek-R1-Zero模型？",
    "type": "question",
    "updated_time": 1737439725,
    "url": "https://api.zhihu.com/questions/10175007563"
  },
  "relationship": {
    "upvoted_followees": []
  },
  "type": "answer",
  "voteup_count": 158
}